name: Lint Workflow

on: [push]


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Node Install
        run: npm ci
      - name: Check formatting
        run: npm run fmt:check
      - name: Lint
        run: npm run lint
  check_build:
    # meant to check that build succeeds on pr branches
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout  
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '18.x'
      - name: Node Install
        run: npm ci
      - name: Build
        run: npm run build
  build:
    # creates the dockerized production build on the main branch
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        run: |
          ./scripts/docker_build.sh
          ./scripts/docker_push.sh
      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
